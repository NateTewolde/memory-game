{"ast":null,"code":"var _jsxFileName = \"/home/nate/repos/memory-game/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport uniqid from \"uniqid\";\nimport Card from \"./Card.js\";\nimport Score from \"./Score.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [cards, setCards] = useState([{\n    name: \"1\",\n    id: \"1\"\n  }, {\n    name: \"2\",\n    id: \"2\"\n  }, {\n    name: \"3\",\n    id: \"3\"\n  }, {\n    name: \"4\",\n    id: \"4\"\n  }, {\n    name: \"5\",\n    id: \"5\"\n  }, {\n    name: \"6\",\n    id: \"6\"\n  }, {\n    name: \"7\",\n    id: \"7\"\n  }, {\n    name: \"8\",\n    id: \"8\"\n  }, {\n    name: \"9\",\n    id: \"9\"\n  }, {\n    name: \"10\",\n    id: \"10\"\n  }, {\n    name: \"11\",\n    id: \"11\"\n  }, {\n    name: \"12\",\n    id: \"12\"\n  }]);\n  const shuffleArray = arr => {\n    return arr.slice(0).sort(() => Math.random() - 0.5);\n  };\n  const [clickedCards, setClickedCards] = useState([]);\n  const [clickedCard, setClickedCard] = useState(\"\");\n  const handleCardClick = e => {\n    setClickedCard(e);\n    setClickedCards([...clickedCards, e.target.id]);\n    setCards(shuffleArray(cards));\n  };\n  const [bestScore, setBestScore] = useState(0);\n  useEffect(() => {\n    const updateScores = () => {\n      if (clickedCards.slice(0, clickedCards.length - 1).includes(clickedCards[clickedCards.length - 1])) {\n        if (clickedCards.length - 1 > bestScore) {\n          setBestScore(clickedCards.length - 1);\n        }\n        setClickedCards([]);\n      }\n    };\n    updateScores();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [clickedCard]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Card Matching Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards-container\",\n      children: cards.map(card => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          card: card,\n          handleCardClick: e => handleCardClick(e)\n        }, uniqid(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Score, {\n      currentScore: clickedCards.length,\n      bestScore: bestScore\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"b1w9DvbLnRHYqdfSOGKunNNzuKk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","uniqid","Card","Score","App","cards","setCards","name","id","shuffleArray","arr","slice","sort","Math","random","clickedCards","setClickedCards","clickedCard","setClickedCard","handleCardClick","e","target","bestScore","setBestScore","updateScores","length","includes","map","card"],"sources":["/home/nate/repos/memory-game/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport uniqid from \"uniqid\";\nimport Card from \"./Card.js\";\nimport Score from \"./Score.js\";\n\nfunction App() {\n  const [cards, setCards] = useState([\n    { name: \"1\", id: \"1\" },\n    { name: \"2\", id: \"2\" },\n    { name: \"3\", id: \"3\" },\n    { name: \"4\", id: \"4\" },\n    { name: \"5\", id: \"5\" },\n    { name: \"6\", id: \"6\" },\n    { name: \"7\", id: \"7\" },\n    { name: \"8\", id: \"8\" },\n    { name: \"9\", id: \"9\" },\n    { name: \"10\", id: \"10\" },\n    { name: \"11\", id: \"11\" },\n    { name: \"12\", id: \"12\" },\n  ]);\n\n  const shuffleArray = (arr) => {\n    return arr.slice(0).sort(() => Math.random() - 0.5);\n  };\n\n  const [clickedCards, setClickedCards] = useState([]);\n  const [clickedCard, setClickedCard] = useState(\"\");\n  const handleCardClick = (e) => {\n    setClickedCard(e);\n    setClickedCards([...clickedCards, e.target.id]);\n    setCards(shuffleArray(cards));\n  };\n\n  const [bestScore, setBestScore] = useState(0);\n  useEffect(() => {\n    const updateScores = () => {\n      if (\n        clickedCards\n          .slice(0, clickedCards.length - 1)\n          .includes(clickedCards[clickedCards.length - 1])\n      ) {\n        if (clickedCards.length - 1 > bestScore) {\n          setBestScore(clickedCards.length - 1);\n        }\n        setClickedCards([]);\n      }\n    };\n    updateScores();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [clickedCard]);\n\n  return (\n    <div className=\"wrapper\">\n      <h1>Card Matching Game</h1>\n      <div className=\"cards-container\">\n        {cards.map((card) => {\n          return (\n            <Card\n              card={card}\n              handleCardClick={(e) => handleCardClick(e)}\n              key={uniqid()}\n            />\n          );\n        })}\n      </div>\n      <Score currentScore={clickedCards.length} bestScore={bestScore} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}