{"ast":null,"code":"var _jsxFileName = \"/home/nate/repos/memory-game/src/App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport uniqid from \"uniqid\";\nimport Card from \"./Card.js\";\n\n// Steps:\n// 1. Lay out 12 cards from an array. DONE\n// 2. Make array shuffle cards when a card is clicked\n// 3. each time a card is clicked that cards id is added to a clicked array\n// 4. Score keeper uses clicked Array to keep the score.\n// 5. When a card is clicked that matches the clicked array then game starts over\n// and score is added to completed scores array. highest from that array is shown\n\n//components -> App, Card, Scores\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cards = [{\n  name: \"1\",\n  id: \"1\"\n}, {\n  name: \"2\",\n  id: \"2\"\n}, {\n  name: \"3\",\n  id: \"3\"\n}, {\n  name: \"4\",\n  id: \"4\"\n}, {\n  name: \"5\",\n  id: \"5\"\n}, {\n  name: \"6\",\n  id: \"6\"\n}, {\n  name: \"7\",\n  id: \"7\"\n}, {\n  name: \"8\",\n  id: \"8\"\n}, {\n  name: \"9\",\n  id: \"9\"\n}, {\n  name: \"10\",\n  id: \"10\"\n}, {\n  name: \"11\",\n  id: \"11\"\n}, {\n  name: \"12\",\n  id: \"12\"\n}];\nfunction shuffleArray(arr) {\n  arr.sort(() => Math.random() - 0.5);\n}\nlet arr = [1, 2, 3, 4, 5];\nshuffleArray(arr);\nconsole.log(arr);\nfunction App() {\n  const handleCardClick = e => {\n    console.log(\"hi\");\n    console.log(e.target.id);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: e => handleCardClick(e),\n      children: \"test div\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Card Matching Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards-container\",\n      children: cards.map(card => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          card: card,\n          handleCardClick: e => handleCardClick(e)\n        }, uniqid(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","uniqid","Card","cards","name","id","shuffleArray","arr","sort","Math","random","console","log","App","handleCardClick","e","target","map","card"],"sources":["/home/nate/repos/memory-game/src/App.js"],"sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport uniqid from \"uniqid\";\nimport Card from \"./Card.js\";\n\n// Steps:\n// 1. Lay out 12 cards from an array. DONE\n// 2. Make array shuffle cards when a card is clicked\n// 3. each time a card is clicked that cards id is added to a clicked array\n// 4. Score keeper uses clicked Array to keep the score.\n// 5. When a card is clicked that matches the clicked array then game starts over\n// and score is added to completed scores array. highest from that array is shown\n\n//components -> App, Card, Scores\nconst cards = [\n  { name: \"1\", id: \"1\" },\n  { name: \"2\", id: \"2\" },\n  { name: \"3\", id: \"3\" },\n  { name: \"4\", id: \"4\" },\n  { name: \"5\", id: \"5\" },\n  { name: \"6\", id: \"6\" },\n  { name: \"7\", id: \"7\" },\n  { name: \"8\", id: \"8\" },\n  { name: \"9\", id: \"9\" },\n  { name: \"10\", id: \"10\" },\n  { name: \"11\", id: \"11\" },\n  { name: \"12\", id: \"12\" },\n];\n\nfunction shuffleArray(arr) {\n  arr.sort(() => Math.random() - 0.5);\n}\nlet arr = [1, 2, 3, 4, 5];\nshuffleArray(arr);\nconsole.log(arr);\n\nfunction App() {\n  const handleCardClick = (e) => {\n    console.log(\"hi\");\n    console.log(e.target.id);\n  };\n\n  return (\n    <div className=\"wrapper\">\n      <div onClick={(e) => handleCardClick(e)}>test div</div>\n      <h1>Card Matching Game</h1>\n      <div className=\"cards-container\">\n        {cards.map((card) => {\n          return (\n            <Card\n              card={card}\n              handleCardClick={(e) => handleCardClick(e)}\n              key={uniqid()}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,QAAQ;AAC3B,OAAOC,IAAI,MAAM,WAAW;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AACA,MAAMC,KAAK,GAAG,CACZ;EAAEC,IAAI,EAAE,GAAG;EAAEC,EAAE,EAAE;AAAI,CAAC,EACtB;EAAED,IAAI,EAAE,GAAG;EAAEC,EAAE,EAAE;AAAI,CAAC,EACtB;EAAED,IAAI,EAAE,GAAG;EAAEC,EAAE,EAAE;AAAI,CAAC,EACtB;EAAED,IAAI,EAAE,GAAG;EAAEC,EAAE,EAAE;AAAI,CAAC,EACtB;EAAED,IAAI,EAAE,GAAG;EAAEC,EAAE,EAAE;AAAI,CAAC,EACtB;EAAED,IAAI,EAAE,GAAG;EAAEC,EAAE,EAAE;AAAI,CAAC,EACtB;EAAED,IAAI,EAAE,GAAG;EAAEC,EAAE,EAAE;AAAI,CAAC,EACtB;EAAED,IAAI,EAAE,GAAG;EAAEC,EAAE,EAAE;AAAI,CAAC,EACtB;EAAED,IAAI,EAAE,GAAG;EAAEC,EAAE,EAAE;AAAI,CAAC,EACtB;EAAED,IAAI,EAAE,IAAI;EAAEC,EAAE,EAAE;AAAK,CAAC,EACxB;EAAED,IAAI,EAAE,IAAI;EAAEC,EAAE,EAAE;AAAK,CAAC,EACxB;EAAED,IAAI,EAAE,IAAI;EAAEC,EAAE,EAAE;AAAK,CAAC,CACzB;AAED,SAASC,YAAY,CAACC,GAAG,EAAE;EACzBA,GAAG,CAACC,IAAI,CAAC,MAAMC,IAAI,CAACC,MAAM,EAAE,GAAG,GAAG,CAAC;AACrC;AACA,IAAIH,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AACzBD,YAAY,CAACC,GAAG,CAAC;AACjBI,OAAO,CAACC,GAAG,CAACL,GAAG,CAAC;AAEhB,SAASM,GAAG,GAAG;EACb,MAAMC,eAAe,GAAIC,CAAC,IAAK;IAC7BJ,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;IACjBD,OAAO,CAACC,GAAG,CAACG,CAAC,CAACC,MAAM,CAACX,EAAE,CAAC;EAC1B,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,SAAS;IAAA,wBACtB;MAAK,OAAO,EAAGU,CAAC,IAAKD,eAAe,CAACC,CAAC,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAe,eACvD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA2B,eAC3B;MAAK,SAAS,EAAC,iBAAiB;MAAA,UAC7BZ,KAAK,CAACc,GAAG,CAAEC,IAAI,IAAK;QACnB,oBACE,QAAC,IAAI;UACH,IAAI,EAAEA,IAAK;UACX,eAAe,EAAGH,CAAC,IAAKD,eAAe,CAACC,CAAC;QAAE,GACtCd,MAAM,EAAE;UAAA;UAAA;UAAA;QAAA,QACb;MAEN,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QACE;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,KAvBQY,GAAG;AAyBZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}