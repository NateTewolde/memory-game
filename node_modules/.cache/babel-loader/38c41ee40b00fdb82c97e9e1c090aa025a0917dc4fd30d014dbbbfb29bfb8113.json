{"ast":null,"code":"var _jsxFileName = \"/home/nate/repos/memory-game/src/App.js\";\nimport \"./App.css\";\n// Steps:\n// 1. Lay out 12 cards from an array.\n// 2. Make array shuffle cards when a card is clicked\n// 3. each time a card is clicked that cards id is added to a clicked array\n// 4. Score keeper uses clicked Array to keep the score.\n// 5. When a card is clicked that matches the clicked array then game starts over\n// and score is added to completed scores array. highest from that array is shown\n\n//components -> App, Card, Scores\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cards = [{\n  name: \"1\",\n  id: \"1\"\n}, {\n  name: \"2\",\n  id: \"2\"\n}, {\n  name: \"1\",\n  id: \"1\"\n}, {\n  name: \"1\",\n  id: \"1\"\n}, {\n  name: \"1\",\n  id: \"1\"\n}, {\n  name: \"1\",\n  id: \"1\"\n}, {\n  name: \"1\",\n  id: \"1\"\n}, {\n  name: \"1\",\n  id: \"1\"\n}, {\n  name: \"1\",\n  id: \"1\"\n}, {\n  name: \"1\",\n  id: \"1\"\n}, {\n  name: \"1\",\n  id: \"1\"\n}, {\n  name: \"1\",\n  id: \"1\"\n}];\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Card Matching Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["cards","name","id","App"],"sources":["/home/nate/repos/memory-game/src/App.js"],"sourcesContent":["import \"./App.css\";\n// Steps:\n// 1. Lay out 12 cards from an array.\n// 2. Make array shuffle cards when a card is clicked\n// 3. each time a card is clicked that cards id is added to a clicked array\n// 4. Score keeper uses clicked Array to keep the score.\n// 5. When a card is clicked that matches the clicked array then game starts over\n// and score is added to completed scores array. highest from that array is shown\n\n//components -> App, Card, Scores\nconst cards = [\n  { name: \"1\", id: \"1\" },\n  { name: \"2\", id: \"2\" },\n  { name: \"1\", id: \"1\" },\n  { name: \"1\", id: \"1\" },\n  { name: \"1\", id: \"1\" },\n  { name: \"1\", id: \"1\" },\n  { name: \"1\", id: \"1\" },\n  { name: \"1\", id: \"1\" },\n  { name: \"1\", id: \"1\" },\n  { name: \"1\", id: \"1\" },\n  { name: \"1\", id: \"1\" },\n  { name: \"1\", id: \"1\" },\n];\n\nfunction App() {\n  return (\n    <div className=\"wrapper\">\n      <h1>Card Matching Game</h1>\n      <div className=\"cards-container\"></div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAO,WAAW;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AACA,MAAMA,KAAK,GAAG,CACZ;EAAEC,IAAI,EAAE,GAAG;EAAEC,EAAE,EAAE;AAAI,CAAC,EACtB;EAAED,IAAI,EAAE,GAAG;EAAEC,EAAE,EAAE;AAAI,CAAC,EACtB;EAAED,IAAI,EAAE,GAAG;EAAEC,EAAE,EAAE;AAAI,CAAC,EACtB;EAAED,IAAI,EAAE,GAAG;EAAEC,EAAE,EAAE;AAAI,CAAC,EACtB;EAAED,IAAI,EAAE,GAAG;EAAEC,EAAE,EAAE;AAAI,CAAC,EACtB;EAAED,IAAI,EAAE,GAAG;EAAEC,EAAE,EAAE;AAAI,CAAC,EACtB;EAAED,IAAI,EAAE,GAAG;EAAEC,EAAE,EAAE;AAAI,CAAC,EACtB;EAAED,IAAI,EAAE,GAAG;EAAEC,EAAE,EAAE;AAAI,CAAC,EACtB;EAAED,IAAI,EAAE,GAAG;EAAEC,EAAE,EAAE;AAAI,CAAC,EACtB;EAAED,IAAI,EAAE,GAAG;EAAEC,EAAE,EAAE;AAAI,CAAC,EACtB;EAAED,IAAI,EAAE,GAAG;EAAEC,EAAE,EAAE;AAAI,CAAC,EACtB;EAAED,IAAI,EAAE,GAAG;EAAEC,EAAE,EAAE;AAAI,CAAC,CACvB;AAED,SAASC,GAAG,GAAG;EACb,oBACE;IAAK,SAAS,EAAC,SAAS;IAAA,wBACtB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA2B,eAC3B;MAAK,SAAS,EAAC;IAAiB;MAAA;MAAA;MAAA;IAAA,QAAO;EAAA;IAAA;IAAA;IAAA;EAAA,QACnC;AAEV;AAAC,KAPQA,GAAG;AASZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}